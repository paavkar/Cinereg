@page "/weather"
@inject IWeatherService WeatherService
@rendermode InteractiveServer

<style>
    h2 {
        text-align: center;
    }
</style>

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data.</p>

<div>
    <label>Location</label>
    <InputText @bind-Value="location">@location</InputText>
    <button @onclick="RetrieveForecast" class="btn btn-primary">Search</button>
</div>

@if (weatherForecast == null)
{
    <p><em>Give a location</em></p>
}
else
{
    <h2>Weather forecast for @location</h2>
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in weatherForecast.list)
            {
                <tr>
                    <td>@forecast.dtDateTime</td>
                    <td>@forecast.main.temp</td>
                    @foreach (var weather in forecast.weather)
                    {
                        <td>@weather.main</td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private string? location;

    private WeatherForecastDTO? weatherForecast;

    async Task RetrieveForecast()
    {
        WeatherForecastDTO weatherForecast = new();
        weatherForecast = await WeatherService.GetWeatherForecast(location);
        this.weatherForecast = weatherForecast;
    }
}
