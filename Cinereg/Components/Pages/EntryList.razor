@page "/movies"

@inject IMovieService MovieService
@inject UserAccessor UserAccessor

@attribute [StreamRendering(true)]

<PageTitle>Movies</PageTitle>

<FluentLabel Typo="Typography.PageTitle">Movie List</FluentLabel>

@if (movies == null)
{
   <FluentProgressRing Style="margin: 1em 0;" />
}
else if (movies.Count == 0)
{
    <FluentLabel>No movies found.</FluentLabel>
    <CreateMovieButton />
}
else
{
    <FluentGrid>
        <FluentGridItem xs="12">
            <InteractiveDataGrid movies="@movies" />
        </FluentGridItem>
    </FluentGrid>
    <CreateMovieButton />
}

@code {
    private ApplicationUser user = default!;
    private List<Movie> movies;
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        movies = await MovieService.GetAllMovies(user.Id);
    }
}
