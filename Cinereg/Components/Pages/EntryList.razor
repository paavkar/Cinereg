@page "/films"
@page "/movies"
@using Microsoft.AspNetCore.Authorization

@inject IMovieService MovieService
@inject UserAccessor UserAccessor
@inject IDialogService DialogService

@attribute [StreamRendering(true)]
@attribute [Authorize]

<PageTitle>Movies</PageTitle>

<FluentLabel Typo="Typography.PageTitle">Film List</FluentLabel>

@if (movies == null)
{
    <FluentProgressRing Style="margin: 1em 0;" />
}
else if (movies.Count == 0)
{
    <FluentLabel>No movies found.</FluentLabel>
    <CreateMovieButton />
}
else
{
    <FluentGrid>
        <FluentGridItem xs="12">
            <FluentTabs @bind-ActiveTabId="@activeid" OnTabChange="HandleOnTabChange">
                <FluentTab Label="All Films" Id="all">
                    <InteractiveDataGrid movies="@movies" />
                </FluentTab>
                @foreach (var genre in MovieGenres)
                {
                    <FluentTab Label=@((genre) + " Films") Id="@genre">
                        <InteractiveDataGrid movies="@movies.Where(m => m.MovieGenres.Contains(m.MovieGenres.Find(g => g.Name == genre)!)).ToList()" />
                    </FluentTab>
                }
            </FluentTabs>
        </FluentGridItem>
    </FluentGrid>
    <CreateMovieButton />

    <AIButton movies="@movies" />
}

@code {
    private ApplicationUser user = default!;
    private List<MovieWithGenres> movies;
    private List<string> MovieGenres { get; set; } = new();
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    string? activeid = "all";
    FluentTab? changedto;

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        movies = await MovieService.GetAllMovies(user.Id);
    }

    protected override void OnParametersSet()
    {
        if (movies != null)
        {
            foreach (var movie in movies)
            {
                foreach (var genre in movie.MovieGenres)
                {
                    if (!MovieGenres.Contains(genre.Name)) MovieGenres.Add(genre.Name);
                }
            }
        }
    }

    private void HandleOnTabChange(FluentTab tab)
    {
        changedto = tab;
    }
}
